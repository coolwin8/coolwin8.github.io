{"meta":{"title":"CoolWin8的技术博客","subtitle":"Notes","description":"coolwin8的日常技术笔记","author":"lengwei","url":"http://coolwin8.github.io","root":"/"},"pages":[{"title":"categories","date":"2020-04-11T12:19:56.000Z","updated":"2020-04-11T04:20:26.880Z","comments":true,"path":"categories/index.html","permalink":"http://coolwin8.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"部署PyPi离线私有库","slug":"部署PyPi离线私有库","date":"2020-04-11T02:58:52.450Z","updated":"2020-04-11T05:39:24.752Z","comments":true,"path":"2020/04/11/部署PyPi离线私有库/","link":"","permalink":"http://coolwin8.github.io/2020/04/11/%E9%83%A8%E7%BD%B2PyPi%E7%A6%BB%E7%BA%BF%E7%A7%81%E6%9C%89%E5%BA%93/","excerpt":"","text":"1. 拉取镜像 pypiserver/pypiserver1docker pull pypiserver&#x2F;pypiserver:latest 2. docker 部署运行 运行container1234567891011mkdir -p &#x2F;data&#x2F;pypi&#x2F;packages# 无认证目录上传，直接将安装包下载到映射目录即可docker run --name pypiserver --restart&#x3D;always -d -p 8088:8080 -v &#x2F;data&#x2F;pypi&#x2F;packages:&#x2F;data&#x2F;packages pypiserver&#x2F;pypiserver:latest# apache认证pypiupload 上传htpasswd -sc &#x2F;data&#x2F;pypi&#x2F;auth&#x2F;.htpasswd lengweiln -sv &#x2F;usr&#x2F;local&#x2F;sbin&#x2F;python3.7&#x2F;bin&#x2F;pypiupload &#x2F;us&#x2F;bin&#x2F;pypiuploaddocker run --name pypiserver -d -p 8088:8080 -v &#x2F;data&#x2F;pypi&#x2F;auth&#x2F;.htpasswd:&#x2F;data&#x2F;.htpasswd pypiserver&#x2F;pypiserver:latest -P .htpasswd packages# 合成docker run --name pypiserver --restart&#x3D;always -d -p 8088:8080 -v &#x2F;data&#x2F;pypi&#x2F;auth&#x2F;.htpasswd:&#x2F;data&#x2F;.htpasswd -v &#x2F;data&#x2F;pypi&#x2F;packages&#x2F;:&#x2F;data&#x2F;packages&#x2F; pypiserver&#x2F;pypiserver:latest -P .htpasswd packages 3. 客户端配置 配置pypi 123456789[root@localhost pypi]# vi ~&#x2F;.pypirc [distutils]index-servers &#x3D; local[local]repository: http:&#x2F;&#x2F;192.168.1.14:8088username: lengweipassword: 123456 安装上传工具 pypi-upload 12[root@localhost]# pip install pypi-uploadpypiupload files &#x2F;data&#x2F;pypi&#x2F;packages&#x2F;* -i local 配置pip 12345678[root@localhost pypi]# vi ~&#x2F;.pip&#x2F;pip.conf[global]index-url &#x3D; http:&#x2F;&#x2F;192.168.1.14&#x2F;simpleextra-index-url&#x3D;https:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple# aliyun pypi镜像 https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F;[install]trusted-host &#x3D; 192.168.1.14 4. 拉取依赖包到私有库 (在不同的平台下执行拉取，如win_amd64、manylinux等) Python 项目使用 pip 安装的包，都可以通过 pip freeze &gt;requirements.txt 导出环境中已有的模块。搭建 requirements.txt 离线 PyPI 仓库，我们首先需要把 requirements.txt 所有的模块安装包下载到本地。 1234567891011121314$ pip download -d &#x2F;data&#x2F;pypi&#x2F;packages -r requirements.txt --index-url https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple --extra-index-url https:&#x2F;&#x2F;wheels.galaxyproject.org&#x2F;simpleLooking in indexes: https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple, https:&#x2F;&#x2F;wheels.galaxyproject.org&#x2F;simpleCollecting amqp&#x3D;&#x3D;2.2.2 (from -r &#x2F;&#x2F;home&#x2F;shenweiyan&#x2F;galaxy&#x2F;requirements.txt (line 1))Downloading https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;packages&#x2F;88&#x2F;4a&#x2F;8c45a882d842678963516ebd9cf584a4ded51af719234c3b696c2e884c60&#x2F;amqp-2.2.2-py2.py3-none-any.whl (48kB) 100% |████████████████████████████████| 51kB 779kB&#x2F;sSaved .&#x2F;amqp-2.2.2-py2.py3-none-any.whl......Collecting wrapt&#x3D;&#x3D;1.10.11 (from -r &#x2F;home&#x2F;shenweiyan&#x2F;galaxy&#x2F;requirements.txt (line 134))Downloading https:&#x2F;&#x2F;wheels.galaxyproject.org&#x2F;packages&#x2F;wrapt-1.10.11-cp27-cp27mu-manylinux1_x86_64.whl (64kB) 100% |████████████████████████████████| 71kB 321kB&#x2F;sSaved &#x2F;home&#x2F;galaxy&#x2F;packages&#x2F;wrapt-1.10.11-cp27-cp27mu-manylinux1_x86_64.whlSuccessfully downloaded amqp appdirs asn1crypto babel bagit bcrypt bdbag beaker bioblend bleach boltons boto bunch bx-python bz2file certifi ...... wcwidth webencodings webob whoosh wrapt 把 /home/shenweiyan/packages 整个目录拷贝到目标服务器(可连网但速度极慢，目标路径：/data/galaxy-dist/packages)，搭建并启动 pypiserver，然后从本地离线 PyPI 仓库安装 requirements 软件 1$ pip install --index-url http:&#x2F;&#x2F;localhost:8080&#x2F;simple&#x2F; --extra-index-url https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F; -r requirements.txt 5. 获取现有依赖库 pip导出安装的库到requirements.txt 1pip freeze &gt; requirements.txt pip导入requirements.txt中列出的库到系统 12pip install -r requirements.txtpip download -d &#x2F;data&#x2F;pypi&#x2F;packages -r requirements.txt pip download –only-binary=:all: –platform linux_x86_64 –python-version 3 –implementation cp –abi cp37m \\","categories":[{"name":"python","slug":"python","permalink":"http://coolwin8.github.io/categories/python/"},{"name":"pip","slug":"python/pip","permalink":"http://coolwin8.github.io/categories/python/pip/"}],"tags":[{"name":"pypi","slug":"pypi","permalink":"http://coolwin8.github.io/tags/pypi/"},{"name":"部署","slug":"部署","permalink":"http://coolwin8.github.io/tags/%E9%83%A8%E7%BD%B2/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-03-26T06:30:10.543Z","updated":"2020-03-24T07:50:27.304Z","comments":true,"path":"2020/03/26/hello-world/","link":"","permalink":"http://coolwin8.github.io/2020/03/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"python","slug":"python","permalink":"http://coolwin8.github.io/categories/python/"},{"name":"pip","slug":"python/pip","permalink":"http://coolwin8.github.io/categories/python/pip/"}],"tags":[{"name":"pypi","slug":"pypi","permalink":"http://coolwin8.github.io/tags/pypi/"},{"name":"部署","slug":"部署","permalink":"http://coolwin8.github.io/tags/%E9%83%A8%E7%BD%B2/"}]}